[{"/home/shanyonglong/web/xg-front-mobile2/src/App.js":"1","/home/shanyonglong/web/xg-front-mobile2/src/pages/Details.jsx":"2","/home/shanyonglong/web/xg-front-mobile2/src/pages/User.jsx":"3","/home/shanyonglong/web/xg-front-mobile2/src/components/address.js":"4","/home/shanyonglong/web/xg-front-mobile2/src/reportWebVitals.js":"5","/home/shanyonglong/web/xg-front-mobile2/src/api/api.js":"6","/home/shanyonglong/web/xg-front-mobile2/src/components/SubjectList.jsx":"7","/home/shanyonglong/web/xg-front-mobile2/src/index.js":"8","/home/shanyonglong/web/xg-front-mobile2/src/pages/List.jsx":"9","/home/shanyonglong/web/xg-front-mobile2/src/pages/Main.jsx":"10","/home/shanyonglong/web/xg-front-mobile2/src/pages/Login.jsx":"11","/home/shanyonglong/web/xg-front-mobile2/src/pages/Home.jsx":"12"},{"size":321,"mtime":1609121716260,"results":"13","hashOfConfig":"14"},{"size":1846,"mtime":1609218014845,"results":"15","hashOfConfig":"14"},{"size":844,"mtime":1609121716260,"results":"16","hashOfConfig":"14"},{"size":570072,"mtime":1609121716260,"results":"17","hashOfConfig":"14"},{"size":362,"mtime":1609121716260,"results":"18","hashOfConfig":"14"},{"size":14603,"mtime":1609215216045,"results":"19","hashOfConfig":"14"},{"size":4268,"mtime":1609121716260,"results":"20","hashOfConfig":"14"},{"size":511,"mtime":1609121716260,"results":"21","hashOfConfig":"14"},{"size":3303,"mtime":1609121716260,"results":"22","hashOfConfig":"14"},{"size":1864,"mtime":1609218434925,"results":"23","hashOfConfig":"14"},{"size":3697,"mtime":1609218445735,"results":"24","hashOfConfig":"14"},{"size":10631,"mtime":1609121716260,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},"gtx4xi",{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"45"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"45"},"/home/shanyonglong/web/xg-front-mobile2/src/App.js",["58"],"import 'zarm/dist/zarm.min.css';\nimport MyRouter from './pages/Router';\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <MyRouter />\n      </Router>\n    </div >\n  );\n}\n\nexport default App;\n",["59","60"],"/home/shanyonglong/web/xg-front-mobile2/src/pages/Details.jsx",["61","62"],"/home/shanyonglong/web/xg-front-mobile2/src/pages/User.jsx",["63","64"],"import { useState, useEffect } from 'react';\nimport { Cell, Panel, Button } from 'zarm';\n\nconst User = () => {\n    const [userInfo, setUserInfo] = useState({\n        name: sessionStorage.getItem(\"user_name\"),\n        role: sessionStorage.getItem(\"role_name\")\n    });\n    let handleSignOut = e => {\n        sessionStorage.removeItem(\"token\");\n        window.location.reload();\n    }\n\n    return (\n        <>\n            <Panel\n                title=\"用户信息\"\n            >\n                <Cell title=\"用户\" description={userInfo.name}>\n                </Cell>\n                <Cell title=\"角色\" description={userInfo.role}></Cell>\n                <Button block onClick={handleSignOut} style={{ marginBottom: 60, marginLeft: \"auto\", marginRight: \"auto\" }} >注销</Button>\n            </Panel>\n\n\n        </>\n    )\n}\nexport default User;","/home/shanyonglong/web/xg-front-mobile2/src/components/address.js",[],"/home/shanyonglong/web/xg-front-mobile2/src/reportWebVitals.js",[],"/home/shanyonglong/web/xg-front-mobile2/src/api/api.js",["65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","92"],"/home/shanyonglong/web/xg-front-mobile2/src/components/SubjectList.jsx",["93","94","95","96","97","98","99","100","101","102","103","104"],"/home/shanyonglong/web/xg-front-mobile2/src/index.js",[],["105","106"],"/home/shanyonglong/web/xg-front-mobile2/src/pages/List.jsx",["107","108","109"],"import { useState, useEffect } from 'react';\nimport { listStudentAPI } from '../api/api';\nimport { Cell, Panel, Button } from 'zarm';\nimport { useHistory } from \"react-router-dom\";\n\nconst pageSize = 20;\nlet currentPage = 1;\nconst List = (props) => {\n    const [students, setStudents] = useState({\n        total: 0,\n        data: []\n    });\n    let history = useHistory();\n    const fetchStudent = async (page, pageSize) => {\n        const rawRes = await listStudentAPI(page, pageSize, {});\n        if (rawRes.err_msg != \"success\") {\n            return;\n        }\n        const rawStudents = rawRes.result.students;\n        let students = {\n            total: rawRes.result.total,\n            data: []\n        };\n        if (students == null) {\n            return;\n        }\n        for (let i = 0; i < rawStudents.length; i++) {\n            students.data.push({\n                id: rawStudents[i].id,\n                author: rawStudents[i].author,\n                gender: rawStudents[i].gender,\n                email: rawStudents[i].email,\n                created_at: rawStudents[i].created_at,\n                student_name: rawStudents[i].name,\n                address: rawStudents[i].address + rawStudents[i].address_ext,\n                telephone: rawStudents[i].telephone,\n                intent_subject: rawStudents[i].intent_subject,\n                status: rawStudents[i].status,\n                author: rawStudents[i].authorName\n            })\n        }\n        return students\n    }\n    const handleMore = async () => {\n        let res = await fetchStudent(currentPage, pageSize);\n        if (res.data.length > 0) {\n            currentPage++;\n            let newStudents = {\n                total: res.total,\n                data: []\n            };\n            for (let i = 0; i < students.data.length; i++) {\n                newStudents.data.push(students.data[i]);\n            }\n            for (let i = 0; i < res.data.length; i++) {\n                newStudents.data.push(res.data[i]);\n            }\n            setStudents(newStudents);\n        }\n    }\n    const refreshList = async e => {\n        currentPage = 1;\n        let res = await fetchStudent(currentPage, pageSize);\n        currentPage++;\n        setStudents(res);\n    }\n    const handleDetails = v => {\n        console.log(v);\n        history.push(\"/details/\" + v.id);\n    }\n    useEffect(() => {\n        currentPage = 1;\n        const fetchData = async () => {\n            let res = await fetchStudent(currentPage, pageSize);\n            currentPage++;\n            setStudents(res);\n        }\n        fetchData();\n    }, [props.refresh]);\n\n    return (\n        <>\n            <Panel\n                title=\"我的录单\"\n                more={<a href=\"#\" onClick={() => refreshList()}>刷新</a>}\n            >\n                {students != null && students.data != null && students.data.map((v) =>\n                    <Cell hasArrow onClick={() => { handleDetails(v) }} key={v.id} title={v.student_name} description={v.created_at.replaceAll(\"T\", \" \").replaceAll(\"Z\", \"\")}>\n                    </Cell>\n                )}\n                <Button block size=\"xs\" onClick={handleMore} style={{ marginBottom: 60, marginLeft: \"auto\", marginRight: \"auto\" }} >更多</Button>\n            </Panel>\n        </>\n    )\n}\nexport default List;","/home/shanyonglong/web/xg-front-mobile2/src/pages/Main.jsx",["110","111","112","113","114","115","116"],"import { useState } from 'react';\nimport { Icon, TabBar } from 'zarm';\nimport { useParams, useHistory } from \"react-router-dom\";\nimport Home from './Home';\nimport List from './List';\nimport User from './User';\nconst TabIcon = Icon.createFromIconfont('//at.alicdn.com/t/font_1340918_lpsswvb7yv.js');\n\nconst Main = () => {\n    let defaultActive = \"home\"\n    if (sessionStorage.getItem(\"activeKey\") != \"\") {\n        defaultActive = sessionStorage.getItem(\"activeKey\");\n    }\n    let [activeKey, setActiveKey] = useState(defaultActive);\n    let listDisplay = activeKey == \"list\";\n    return (\n        <>\n            <div>\n                <div style={{ display: activeKey == \"home\" ? 'block' : 'none' }}>\n                    <Home />\n                </div>\n                <div style={{ display: activeKey == \"list\" ? 'block' : 'none' }}>\n                    <List refresh={listDisplay} />\n                </div>\n                <div style={{ display: activeKey == \"user\" ? 'block' : 'none' }}>\n                    <User />\n                </div>\n\n            </div>\n            <TabBar\n                visible={true}\n                activeKey={activeKey}\n                onChange={setActiveKey}>\n                <TabBar.Item\n                    title=\"主页\"\n                    itemKey=\"home\"\n                    icon={<TabIcon type=\"home\" />}\n                />\n                <TabBar.Item\n                    title=\"名单\"\n                    itemKey=\"list\"\n                    icon={<TabIcon type=\"list\" />}\n                // badge={{ shape: 'circle', text: '3' }}\n                />\n                <TabBar.Item\n                    title=\"我的\"\n                    itemKey=\"user\"\n                    icon={<TabIcon type=\"user\" />}\n                // badge={{ shape: 'dot' }}\n                />\n            </TabBar>\n        </>\n    )\n}\n\nexport default Main;","/home/shanyonglong/web/xg-front-mobile2/src/pages/Login.jsx",["117","118","119","120","121"],"import { useState } from 'react';\nimport { Input, Cell, Button, Popup } from 'zarm';\nimport axios from \"axios\"; //导入axios\nimport logo from '../logo.png';\nimport { useHistory } from \"react-router-dom\";\nimport { loginAPI } from '../api/api';\n\nconst Login = () => {\n    const [name, setName] = useState('');\n    const [password, setPassword] = useState('');\n    const [popupSettings, setPopupSettings] = useState({ visible: false, content: \"\" });\n    let history = useHistory();\n\n    function saveSideInfo(name, res) {\n        // sessionStorage.setItem(\"user_id\", res.data.user_id);\n        sessionStorage.setItem(\"user_name\", name);\n        // sessionStorage.setItem(\"role_id\", res.data.role_id);\n        // sessionStorage.setItem(\"org_id\", res.data.org_id);\n        sessionStorage.setItem(\"role_name\", res.data.role_name);\n        sessionStorage.setItem(\"org_name\", res.data.org_name);\n        let auths = \"\"\n        for (let i = 0; i < res.data.auths.length; i++) {\n            auths = auths + res.data.auths[i].name + \", \";\n        }\n        sessionStorage.setItem(\"auths\", auths);\n    }\n\n    const handleClickLogin = async e => {\n        if (name == \"\" || password == \"\") {\n            toggle(true, \"用户名和密码不能为空\");\n            return;\n        }\n        let res = await loginAPI(name, password);\n        if (res == null) {\n            toggle(true, \"用户名或密码错误\");\n            return;\n        }\n        sessionStorage.setItem(\"token\", res.data.token);\n        axios.defaults.headers.common[\"Authorization\"] = sessionStorage.getItem(\"token\");\n        let flag = false\n        for (let i = 0; i < res.data.auths.length; i++) {\n            if (res.data.auths[i].name == \"录单权\") {\n                flag = true\n            }\n        }\n        if (!flag) {\n            toggle(true, \"该账号无登录手机端权限\");\n            return;\n        }\n\n        saveSideInfo(name, res);\n        sessionStorage.setItem(\"activeKey\", \"home\");\n        history.push(\"/main\");\n    }\n\n    const toggle = (visible, content) => {\n        setPopupSettings({ visible: visible, content: content });\n        setTimeout(() => {\n            setPopupSettings({ visible: false, content: \"\" });\n        }, 3000);\n    }\n    return (\n        <>\n            <div style={{ margin: \"auto\" }}>\n                <img src={logo} style={{ width: \"100%\", marginTop: 60, marginBottom: 40 }} />\n            </div>\n            <Cell title=\"用户名\">\n                <Input\n                    clearable\n                    type=\"text\"\n                    placeholder=\"请输入用户名\"\n                    value={name}\n                    onChange={(value) => {\n                        setName(value);\n                        console.log(`onChange: ${value}`);\n                    }}\n                    onBlur={(value) => console.log(`onBlur: ${value}`)}\n                />\n            </Cell>\n            <Cell title=\"密码\">\n                <Input\n                    clearable\n                    type=\"password\"\n                    placeholder=\"请输入密码\"\n                    placeholder=\"请输入\"\n                    value={password}\n                    onChange={setPassword}\n                />\n            </Cell>\n            <Button block theme=\"primary\" onClick={handleClickLogin}>登录</Button>\n\n            <Popup\n                visible={popupSettings.visible}\n                direction=\"top\"\n                mask={false}\n                afterClose={() => console.log('关闭')}\n            >\n                <div className=\"popup-box-top\">\n                    {popupSettings.content}\n                </div>\n            </Popup>\n        </>\n    )\n}\n\nexport default Login;","/home/shanyonglong/web/xg-front-mobile2/src/pages/Home.jsx",["122","123","124","125","126","127","128","129","130"],"import { useState, useEffect } from 'react';\nimport { Input, Cell, Button, Radio, Picker, Toast, Panel, Popup } from 'zarm';\nimport options from '../components/address';\nimport SubjectList from '../components/SubjectList';\nimport { createStudentAPI, listOrderSourcesAPI } from '../api/api'\n\n\nconst Home = () => {\n    const [name, setName] = useState('');\n    const [note, setNote] = useState('');\n    const [gender, setGender] = useState(true);\n    const [telephone, setTelephone] = useState('');\n    const [addrRegion, setAddrRegion] = useState('');\n    const [addressExt, setAddressExt] = useState('');\n    const [email, setEmail] = useState('');\n    const [subjects, setSubjects] = useState([]);\n    const [orderSource, setOrderSource] = useState('');\n    const [orderSourceID, setOrderSourceID] = useState(0);\n    const [addrPanelVisible, setAddrPanelVisible] = useState(false);\n    const [orderSourcePanelVisible, setOrderSourcePanelVisible] = useState(false);\n    const [popupSettings, setPopupSettings] = useState({ visible: false, content: \"\" });\n    const [clearSubjects, setClearSubjects] = useState(false);\n    const [orderSourceList, setOrderSourceList] = useState([]);\n\n    let resetFormData = () => {\n        setGender(true);\n        setName(\"\");\n        setTelephone(\"\");\n        setEmail(\"\");\n        setAddressExt(\"\");\n        setAddrRegion(\"\");\n        setOrderSource(\"\");\n        setOrderSourceID(0);\n        setNote(\"\");\n        let flag = !clearSubjects;\n        setClearSubjects(flag);\n\n        // setSubjects([]);\n    }\n    useEffect(async () => {\n        let res = await listOrderSourcesAPI();\n        if (res.err_msg != \"success\") {\n            message(\"获取订单来源失败\");\n            return;\n        }\n        if (res.sources == null) {\n            message(\"订单来源为空，请联系系统管理员\");\n            return;\n        }\n        let orderSources = [];\n        for (let i = 0; i < res.sources.length; i++) {\n            orderSources.push({\n                id: res.sources[i].id,\n                name: res.sources[i].name,\n                value: res.sources[i].id,\n                label: res.sources[i].name,\n            });\n        }\n        setOrderSourceList(orderSources);\n    }, []);\n    let checkFormData = () => {\n        if (name == \"\") {\n            message(\"学生姓名不能为空\");\n            return false;\n        }\n        if (telephone == \"\") {\n            message(\"学生电话不能为空\");\n            return false;\n        }\n        if (addrRegion == \"\") {\n            message(\"居住城市不能为空\");\n            return false;\n        }\n        if (orderSource == \"\") {\n            message(\"订单来源不能为空\");\n            return false;\n        }\n        if (subjects.length < 1) {\n            message(\"报名意向不能为空\");\n            return false;\n        }\n        return true\n    }\n    let handleCreateStudent = async e => {\n        let noErr = checkFormData();\n        if (!noErr) {\n            return;\n        }\n        let address = addrRegion;\n        let intentSubjectData = [];\n        for (let i = 0; i < subjects.length; i++) {\n            intentSubjectData.push(subjects[i].value);\n        }\n        let res = await createStudentAPI({\n            \"name\": name,\n            \"gender\": gender,\n            \"telephone\": telephone,\n            \"email\": email,\n            \"address\": address,\n            \"address_ext\": addressExt,\n            \"intent_subject\": intentSubjectData,\n            \"note\": note,\n            \"order_source_id\": orderSourceID\n        });\n        if (res.err_msg == \"success\") {\n            switch (res.result.status) {\n                case 1:\n                    //status 1 创建成功\n                    message('创建成功');\n                    break;\n                case 2:\n                    //status 2 挑战失败\n                    message('创建成功，挑战失败');\n                    break;\n                case 3:\n                    //status 3 挑战成功\n                    message('创建成功，挑战成功');\n                    break;\n                default:\n                    message('创建失败，未知状态');\n            }\n\n        } else {\n            console.log(res);\n            //创建失败\n            message('创建失败:' + res.err_msg);\n        }\n        resetFormData();\n    }\n\n    const openAddrPanel = e => {\n        setAddrPanelVisible(true);\n    }\n    const openOrderSourcePanel = e => {\n        setOrderSourcePanelVisible(true);\n    }\n    const message = (content) => {\n        setPopupSettings({ visible: true, content: content });\n        setTimeout(() => {\n            setPopupSettings({ visible: false, content: \"\" });\n        }, 3000);\n    }\n    const selectAddressRegion = selected => {\n        if (selected == null) {\n            return;\n        }\n        let addr = \"\";\n        for (let i = 0; i < selected.length; i++) {\n            if (addr != \"\") {\n                addr = addr + \"-\";\n            }\n            addr = addr + selected[i].value;\n        }\n        setAddrRegion(addr);\n    }\n\n    const selectOrderSource = selected => {\n        if (selected == null) {\n            return;\n        }\n        let orderSource = \"\";\n        let orderSourceID = 0;\n        for (let i = 0; i < selected.length; i++) {\n            if (orderSource != \"\") {\n                orderSource = orderSource + \"-\";\n            }\n            orderSource = orderSource + selected[i].label;\n\n            orderSourceID = selected[i].value;\n        }\n        setOrderSource(orderSource);\n        setOrderSourceID(orderSourceID);\n\n    }\n    return (\n        <>\n            <Panel\n                title=\"基本信息\"\n            >\n                <Cell title=\"姓名\">\n                    <Input\n                        clearable\n                        type=\"text\"\n                        placeholder=\"请输入学员姓名\"\n                        value={name}\n                        onChange={(value) => {\n                            setName(value);\n                            console.log(`onChange: ${value}`);\n                        }}\n                        onBlur={(value) => console.log(`onBlur: ${value}`)}\n                    />\n\n                </Cell>\n                <Cell title=\"性别\">\n                    <Radio.Group\n                        block\n                        type=\"button\"\n                        defaultValue={true}\n                        value={gender}\n                        onChange={setGender}>\n                        <Radio value={true}>男</Radio>\n                        <Radio value={false}>女</Radio>\n                    </Radio.Group>\n                </Cell>\n                <Cell title=\"手机号\">\n                    <Input\n                        clearable\n                        type=\"text\"\n                        placeholder=\"请输入学员手机号\"\n                        value={telephone}\n                        onChange={(value) => {\n                            setTelephone(value);\n                            console.log(`onChange: ${value}`);\n                        }}\n                        onBlur={(value) => console.log(`onBlur: ${value}`)}\n                    />\n                </Cell>\n\n                <Cell title=\"居住地址\">\n                    <Button size=\"sm\" onClick={openAddrPanel}>选择</Button>\n                    <span>&nbsp;&nbsp;{addrRegion}</span>\n                </Cell>\n                <Cell title=\"详细地址\">\n                    <Input\n                        clearable\n                        type=\"text\"\n                        placeholder=\"请输入详细地址\"\n                        value={addressExt}\n                        onChange={(value) => {\n                            setAddressExt(value);\n                            console.log(`onChange: ${value}`);\n                        }}\n                        onBlur={(value) => console.log(`onBlur: ${value}`)}\n                    />\n                </Cell>\n\n                <Cell title=\"电子邮箱\">\n                    <Input\n                        clearable\n                        type=\"text\"\n                        placeholder=\"请输入学员邮箱\"\n                        value={email}\n                        onChange={(value) => {\n                            setEmail(value);\n                        }}\n                        onBlur={(value) => console.log(`onBlur: ${value}`)}\n                    />\n                </Cell>\n\n                <Cell title=\"订单来源\">\n                    <Button size=\"sm\" onClick={openOrderSourcePanel}>选择</Button>\n                    <span>&nbsp;&nbsp;{orderSource}</span>\n                </Cell>\n\n                <Cell title=\"备注\">\n                    <Input\n                        type=\"text\"\n                        rows={2}\n                        placeholder=\"请输入学员备注\"\n                        value={note}\n                        onChange={setNote}\n                    />\n                </Cell>\n            </Panel>\n\n            <SubjectList handleUpdateSubjects={setSubjects} clear={clearSubjects} />\n\n            <Picker\n                visible={addrPanelVisible}\n                dataSource={options}\n                onOk={(selected) => {\n                    console.log('Picker onOk: ', selected);\n                    Toast.show(JSON.stringify(selected));\n                    selectAddressRegion(selected)\n                    // setValue('cascade', selected.map(item => item.code));\n                    setAddrPanelVisible(false);\n                }}\n                onCancel={() => setAddrPanelVisible(false)}\n            />\n\n            <Picker\n                visible={orderSourcePanelVisible}\n                dataSource={orderSourceList}\n                onOk={(selected) => {\n                    Toast.show(JSON.stringify(selected));\n                    selectOrderSource(selected);\n                    // setValue('single', selected.map(item => item.value));\n                    setOrderSourcePanelVisible(false);\n                }}\n                onCancel={() => setOrderSourcePanelVisible(false)}\n            />\n\n            <Popup\n                visible={popupSettings.visible}\n                direction=\"top\"\n                mask={false}\n                afterClose={() => console.log('关闭')}\n            >\n                <div className=\"popup-box-top\">\n                    {popupSettings.content}\n                </div>\n            </Popup>\n\n            <Button block theme=\"primary\" style={{ marginBottom: 80 }} onClick={handleCreateStudent}>录单</Button>\n        </>\n    )\n}\n\nexport default Home;",{"ruleId":"131","severity":1,"message":"132","line":3,"column":17,"nodeType":"133","messageId":"134","endLine":3,"endColumn":25},{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","severity":1,"message":"140","line":22,"column":29,"nodeType":"141","messageId":"142","endLine":22,"endColumn":31},{"ruleId":"143","severity":1,"message":"144","line":28,"column":8,"nodeType":"145","endLine":28,"endColumn":10,"suggestions":"146"},{"ruleId":"131","severity":1,"message":"147","line":1,"column":20,"nodeType":"133","messageId":"134","endLine":1,"endColumn":29},{"ruleId":"131","severity":1,"message":"148","line":5,"column":22,"nodeType":"133","messageId":"134","endLine":5,"endColumn":33},{"ruleId":"139","severity":1,"message":"149","line":133,"column":18,"nodeType":"141","messageId":"142","endLine":133,"endColumn":20},{"ruleId":"139","severity":1,"message":"149","line":133,"column":43,"nodeType":"141","messageId":"142","endLine":133,"endColumn":45},{"ruleId":"139","severity":1,"message":"140","line":150,"column":48,"nodeType":"141","messageId":"142","endLine":150,"endColumn":50},{"ruleId":"139","severity":1,"message":"140","line":326,"column":29,"nodeType":"141","messageId":"142","endLine":326,"endColumn":31},{"ruleId":"139","severity":1,"message":"140","line":326,"column":57,"nodeType":"141","messageId":"142","endLine":326,"endColumn":59},{"ruleId":"139","severity":1,"message":"140","line":329,"column":28,"nodeType":"141","messageId":"142","endLine":329,"endColumn":30},{"ruleId":"139","severity":1,"message":"140","line":329,"column":55,"nodeType":"141","messageId":"142","endLine":329,"endColumn":57},{"ruleId":"139","severity":1,"message":"140","line":332,"column":34,"nodeType":"141","messageId":"142","endLine":332,"endColumn":36},{"ruleId":"139","severity":1,"message":"140","line":332,"column":67,"nodeType":"141","messageId":"142","endLine":332,"endColumn":69},{"ruleId":"139","severity":1,"message":"140","line":335,"column":30,"nodeType":"141","messageId":"142","endLine":335,"endColumn":32},{"ruleId":"139","severity":1,"message":"140","line":335,"column":59,"nodeType":"141","messageId":"142","endLine":335,"endColumn":61},{"ruleId":"139","severity":1,"message":"140","line":338,"column":37,"nodeType":"141","messageId":"142","endLine":338,"endColumn":39},{"ruleId":"139","severity":1,"message":"140","line":338,"column":71,"nodeType":"141","messageId":"142","endLine":338,"endColumn":73},{"ruleId":"139","severity":1,"message":"140","line":339,"column":37,"nodeType":"141","messageId":"142","endLine":339,"endColumn":39},{"ruleId":"139","severity":1,"message":"140","line":339,"column":64,"nodeType":"141","messageId":"142","endLine":339,"endColumn":66},{"ruleId":"139","severity":1,"message":"140","line":357,"column":29,"nodeType":"141","messageId":"142","endLine":357,"endColumn":31},{"ruleId":"139","severity":1,"message":"140","line":357,"column":57,"nodeType":"141","messageId":"142","endLine":357,"endColumn":59},{"ruleId":"139","severity":1,"message":"140","line":360,"column":28,"nodeType":"141","messageId":"142","endLine":360,"endColumn":30},{"ruleId":"139","severity":1,"message":"140","line":360,"column":55,"nodeType":"141","messageId":"142","endLine":360,"endColumn":57},{"ruleId":"139","severity":1,"message":"140","line":363,"column":34,"nodeType":"141","messageId":"142","endLine":363,"endColumn":36},{"ruleId":"139","severity":1,"message":"140","line":363,"column":67,"nodeType":"141","messageId":"142","endLine":363,"endColumn":69},{"ruleId":"139","severity":1,"message":"140","line":366,"column":30,"nodeType":"141","messageId":"142","endLine":366,"endColumn":32},{"ruleId":"139","severity":1,"message":"140","line":366,"column":59,"nodeType":"141","messageId":"142","endLine":366,"endColumn":61},{"ruleId":"139","severity":1,"message":"140","line":369,"column":37,"nodeType":"141","messageId":"142","endLine":369,"endColumn":39},{"ruleId":"139","severity":1,"message":"140","line":369,"column":71,"nodeType":"141","messageId":"142","endLine":369,"endColumn":73},{"ruleId":"139","severity":1,"message":"140","line":370,"column":37,"nodeType":"141","messageId":"142","endLine":370,"endColumn":39},{"ruleId":"139","severity":1,"message":"140","line":370,"column":64,"nodeType":"141","messageId":"142","endLine":370,"endColumn":66},{"ruleId":"139","severity":1,"message":"149","line":518,"column":23,"nodeType":"141","messageId":"142","endLine":518,"endColumn":25},{"ruleId":"131","severity":1,"message":"150","line":2,"column":42,"nodeType":"133","messageId":"134","endLine":2,"endColumn":47},{"ruleId":"139","severity":1,"message":"149","line":20,"column":49,"nodeType":"141","messageId":"142","endLine":20,"endColumn":51},{"ruleId":"143","severity":1,"message":"151","line":29,"column":15,"nodeType":"152","endLine":42,"endColumn":6},{"ruleId":"139","severity":1,"message":"140","line":31,"column":26,"nodeType":"141","messageId":"142","endLine":31,"endColumn":28},{"ruleId":"139","severity":1,"message":"140","line":38,"column":26,"nodeType":"141","messageId":"142","endLine":38,"endColumn":28},{"ruleId":"143","severity":1,"message":"153","line":42,"column":8,"nodeType":"145","endLine":42,"endColumn":10,"suggestions":"154"},{"ruleId":"143","severity":1,"message":"151","line":44,"column":15,"nodeType":"152","endLine":48,"endColumn":6},{"ruleId":"139","severity":1,"message":"140","line":56,"column":32,"nodeType":"141","messageId":"142","endLine":56,"endColumn":34},{"ruleId":"139","severity":1,"message":"149","line":71,"column":20,"nodeType":"141","messageId":"142","endLine":71,"endColumn":22},{"ruleId":"155","severity":1,"message":"156","line":86,"column":40,"nodeType":"133","messageId":"157","endLine":86,"endColumn":51},{"ruleId":"139","severity":1,"message":"149","line":91,"column":28,"nodeType":"141","messageId":"142","endLine":91,"endColumn":30},{"ruleId":"158","severity":1,"message":"159","line":105,"column":23,"nodeType":"160","endLine":105,"endColumn":78},{"ruleId":"135","replacedBy":"161"},{"ruleId":"137","replacedBy":"162"},{"ruleId":"139","severity":1,"message":"140","line":16,"column":28,"nodeType":"141","messageId":"142","endLine":16,"endColumn":30},{"ruleId":"163","severity":1,"message":"164","line":39,"column":17,"nodeType":"165","messageId":"142","endLine":39,"endColumn":23},{"ruleId":"158","severity":1,"message":"159","line":85,"column":23,"nodeType":"160","endLine":85,"endColumn":65},{"ruleId":"131","severity":1,"message":"166","line":3,"column":10,"nodeType":"133","messageId":"134","endLine":3,"endColumn":19},{"ruleId":"131","severity":1,"message":"167","line":3,"column":21,"nodeType":"133","messageId":"134","endLine":3,"endColumn":31},{"ruleId":"139","severity":1,"message":"140","line":11,"column":45,"nodeType":"141","messageId":"142","endLine":11,"endColumn":47},{"ruleId":"139","severity":1,"message":"149","line":15,"column":33,"nodeType":"141","messageId":"142","endLine":15,"endColumn":35},{"ruleId":"139","severity":1,"message":"149","line":19,"column":50,"nodeType":"141","messageId":"142","endLine":19,"endColumn":52},{"ruleId":"139","severity":1,"message":"149","line":22,"column":50,"nodeType":"141","messageId":"142","endLine":22,"endColumn":52},{"ruleId":"139","severity":1,"message":"149","line":25,"column":50,"nodeType":"141","messageId":"142","endLine":25,"endColumn":52},{"ruleId":"139","severity":1,"message":"149","line":29,"column":18,"nodeType":"141","messageId":"142","endLine":29,"endColumn":20},{"ruleId":"139","severity":1,"message":"149","line":29,"column":36,"nodeType":"141","messageId":"142","endLine":29,"endColumn":38},{"ruleId":"139","severity":1,"message":"149","line":42,"column":40,"nodeType":"141","messageId":"142","endLine":42,"endColumn":42},{"ruleId":"168","severity":1,"message":"169","line":65,"column":17,"nodeType":"160","endLine":65,"endColumn":94},{"ruleId":"170","severity":1,"message":"171","line":85,"column":21,"nodeType":"172","endLine":85,"endColumn":38},{"ruleId":"143","severity":1,"message":"151","line":40,"column":15,"nodeType":"152","endLine":60,"endColumn":6},{"ruleId":"139","severity":1,"message":"140","line":42,"column":25,"nodeType":"141","messageId":"142","endLine":42,"endColumn":27},{"ruleId":"139","severity":1,"message":"149","line":62,"column":18,"nodeType":"141","messageId":"142","endLine":62,"endColumn":20},{"ruleId":"139","severity":1,"message":"149","line":66,"column":23,"nodeType":"141","messageId":"142","endLine":66,"endColumn":25},{"ruleId":"139","severity":1,"message":"149","line":70,"column":24,"nodeType":"141","messageId":"142","endLine":70,"endColumn":26},{"ruleId":"139","severity":1,"message":"149","line":74,"column":25,"nodeType":"141","messageId":"142","endLine":74,"endColumn":27},{"ruleId":"139","severity":1,"message":"149","line":105,"column":25,"nodeType":"141","messageId":"142","endLine":105,"endColumn":27},{"ruleId":"139","severity":1,"message":"140","line":149,"column":22,"nodeType":"141","messageId":"142","endLine":149,"endColumn":24},{"ruleId":"139","severity":1,"message":"140","line":164,"column":29,"nodeType":"141","messageId":"142","endLine":164,"endColumn":31},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","no-native-reassign",["173"],"no-negated-in-lhs",["174"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 'id'. Either include them or remove the dependency array.","ArrayExpression",["175"],"'useEffect' is defined but never used.","'setUserInfo' is assigned a value but never used.","Expected '===' and instead saw '=='.","'Toast' is defined but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'parseSubjects'. Either include it or remove the dependency array.",["176"],"no-use-before-define","'newSubjects' was used before it was defined.","usedBeforeDefined","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["173"],["174"],"no-dupe-keys","Duplicate key 'author'.","ObjectExpression","'useParams' is defined but never used.","'useHistory' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation",{"desc":"177","fix":"178"},{"desc":"179","fix":"180"},"Update the dependencies array to be: [history, id]",{"range":"181","text":"182"},"Update the dependencies array to be: [parseSubjects]",{"range":"183","text":"184"},[838,840],"[history, id]",[1474,1476],"[parseSubjects]"]