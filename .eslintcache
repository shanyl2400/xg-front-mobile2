[{"D:\\Work\\Code\\web\\xg-front-mobile2\\src\\App.js":"1","D:\\Work\\Code\\web\\xg-front-mobile2\\src\\pages\\Main.jsx":"2","D:\\Work\\Code\\web\\xg-front-mobile2\\src\\pages\\User.jsx":"3","D:\\Work\\Code\\web\\xg-front-mobile2\\src\\components\\address.js":"4","D:\\Work\\Code\\web\\xg-front-mobile2\\src\\index.js":"5","D:\\Work\\Code\\web\\xg-front-mobile2\\src\\pages\\Login.jsx":"6","D:\\Work\\Code\\web\\xg-front-mobile2\\src\\pages\\Router.jsx":"7","D:\\Work\\Code\\web\\xg-front-mobile2\\src\\reportWebVitals.js":"8","D:\\Work\\Code\\web\\xg-front-mobile2\\src\\pages\\Home.jsx":"9","D:\\Work\\Code\\web\\xg-front-mobile2\\src\\pages\\Details.jsx":"10","D:\\Work\\Code\\web\\xg-front-mobile2\\src\\api\\api.js":"11","D:\\Work\\Code\\web\\xg-front-mobile2\\src\\components\\SubjectList.jsx":"12"},{"size":338,"mtime":1609218977227,"results":"13","hashOfConfig":"14"},{"size":1919,"mtime":1609218977233,"results":"15","hashOfConfig":"14"},{"size":872,"mtime":1609218977234,"results":"16","hashOfConfig":"14"},{"size":586711,"mtime":1609218977230,"results":"17","hashOfConfig":"14"},{"size":528,"mtime":1609218977232,"results":"18","hashOfConfig":"14"},{"size":3802,"mtime":1609218977233,"results":"19","hashOfConfig":"14"},{"size":809,"mtime":1609218977234,"results":"20","hashOfConfig":"14"},{"size":375,"mtime":1609218977234,"results":"21","hashOfConfig":"14"},{"size":10939,"mtime":1609218977233,"results":"22","hashOfConfig":"14"},{"size":1895,"mtime":1609218977233,"results":"23","hashOfConfig":"14"},{"size":15150,"mtime":1609220097017,"results":"24","hashOfConfig":"14"},{"size":4403,"mtime":1609218977228,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},"rfpd4w",{"filePath":"30","messages":"31","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"29"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Work\\Code\\web\\xg-front-mobile2\\src\\App.js",["60"],"import 'zarm/dist/zarm.min.css';\r\nimport MyRouter from './pages/Router';\r\nimport React, { useState } from 'react';\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <MyRouter />\r\n      </Router>\r\n    </div >\r\n  );\r\n}\r\n\r\nexport default App;\r\n",["61","62"],"D:\\Work\\Code\\web\\xg-front-mobile2\\src\\pages\\Main.jsx",["63","64","65","66","67","68","69"],"import { useState } from 'react';\r\nimport { Icon, TabBar } from 'zarm';\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport Home from './Home';\r\nimport List from './List';\r\nimport User from './User';\r\nconst TabIcon = Icon.createFromIconfont('//at.alicdn.com/t/font_1340918_lpsswvb7yv.js');\r\n\r\nconst Main = () => {\r\n    let defaultActive = \"home\"\r\n    if (sessionStorage.getItem(\"activeKey\") != \"\") {\r\n        defaultActive = sessionStorage.getItem(\"activeKey\");\r\n    }\r\n    let [activeKey, setActiveKey] = useState(defaultActive);\r\n    let listDisplay = activeKey == \"list\";\r\n    return (\r\n        <>\r\n            <div>\r\n                <div style={{ display: activeKey == \"home\" ? 'block' : 'none' }}>\r\n                    <Home />\r\n                </div>\r\n                <div style={{ display: activeKey == \"list\" ? 'block' : 'none' }}>\r\n                    <List refresh={listDisplay} />\r\n                </div>\r\n                <div style={{ display: activeKey == \"user\" ? 'block' : 'none' }}>\r\n                    <User />\r\n                </div>\r\n\r\n            </div>\r\n            <TabBar\r\n                visible={true}\r\n                activeKey={activeKey}\r\n                onChange={setActiveKey}>\r\n                <TabBar.Item\r\n                    title=\"主页\"\r\n                    itemKey=\"home\"\r\n                    icon={<TabIcon type=\"home\" />}\r\n                />\r\n                <TabBar.Item\r\n                    title=\"名单\"\r\n                    itemKey=\"list\"\r\n                    icon={<TabIcon type=\"list\" />}\r\n                // badge={{ shape: 'circle', text: '3' }}\r\n                />\r\n                <TabBar.Item\r\n                    title=\"我的\"\r\n                    itemKey=\"user\"\r\n                    icon={<TabIcon type=\"user\" />}\r\n                // badge={{ shape: 'dot' }}\r\n                />\r\n            </TabBar>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Main;","D:\\Work\\Code\\web\\xg-front-mobile2\\src\\pages\\User.jsx",["70","71"],"import { useState, useEffect } from 'react';\r\nimport { Cell, Panel, Button } from 'zarm';\r\n\r\nconst User = () => {\r\n    const [userInfo, setUserInfo] = useState({\r\n        name: sessionStorage.getItem(\"user_name\"),\r\n        role: sessionStorage.getItem(\"role_name\")\r\n    });\r\n    let handleSignOut = e => {\r\n        sessionStorage.removeItem(\"token\");\r\n        window.location.reload();\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Panel\r\n                title=\"用户信息\"\r\n            >\r\n                <Cell title=\"用户\" description={userInfo.name}>\r\n                </Cell>\r\n                <Cell title=\"角色\" description={userInfo.role}></Cell>\r\n                <Button block onClick={handleSignOut} style={{ marginBottom: 60, marginLeft: \"auto\", marginRight: \"auto\" }} >注销</Button>\r\n            </Panel>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\nexport default User;","D:\\Work\\Code\\web\\xg-front-mobile2\\src\\components\\address.js",[],"D:\\Work\\Code\\web\\xg-front-mobile2\\src\\index.js",[],["72","73"],"D:\\Work\\Code\\web\\xg-front-mobile2\\src\\pages\\Login.jsx",["74","75","76","77","78"],"import { useState } from 'react';\r\nimport { Input, Cell, Button, Popup } from 'zarm';\r\nimport axios from \"axios\"; //导入axios\r\nimport logo from '../logo.png';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { loginAPI } from '../api/api';\r\n\r\nconst Login = () => {\r\n    const [name, setName] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [popupSettings, setPopupSettings] = useState({ visible: false, content: \"\" });\r\n    let history = useHistory();\r\n\r\n    function saveSideInfo(name, res) {\r\n        // sessionStorage.setItem(\"user_id\", res.data.user_id);\r\n        sessionStorage.setItem(\"user_name\", name);\r\n        // sessionStorage.setItem(\"role_id\", res.data.role_id);\r\n        // sessionStorage.setItem(\"org_id\", res.data.org_id);\r\n        sessionStorage.setItem(\"role_name\", res.data.role_name);\r\n        sessionStorage.setItem(\"org_name\", res.data.org_name);\r\n        let auths = \"\"\r\n        for (let i = 0; i < res.data.auths.length; i++) {\r\n            auths = auths + res.data.auths[i].name + \", \";\r\n        }\r\n        sessionStorage.setItem(\"auths\", auths);\r\n    }\r\n\r\n    const handleClickLogin = async e => {\r\n        if (name == \"\" || password == \"\") {\r\n            toggle(true, \"用户名和密码不能为空\");\r\n            return;\r\n        }\r\n        let res = await loginAPI(name, password);\r\n        if (res == null) {\r\n            toggle(true, \"用户名或密码错误\");\r\n            return;\r\n        }\r\n        sessionStorage.setItem(\"token\", res.data.token);\r\n        axios.defaults.headers.common[\"Authorization\"] = sessionStorage.getItem(\"token\");\r\n        let flag = false\r\n        for (let i = 0; i < res.data.auths.length; i++) {\r\n            if (res.data.auths[i].name == \"录单权\") {\r\n                flag = true\r\n            }\r\n        }\r\n        if (!flag) {\r\n            toggle(true, \"该账号无登录手机端权限\");\r\n            return;\r\n        }\r\n\r\n        saveSideInfo(name, res);\r\n        sessionStorage.setItem(\"activeKey\", \"home\");\r\n        history.push(\"/main\");\r\n    }\r\n\r\n    const toggle = (visible, content) => {\r\n        setPopupSettings({ visible: visible, content: content });\r\n        setTimeout(() => {\r\n            setPopupSettings({ visible: false, content: \"\" });\r\n        }, 3000);\r\n    }\r\n    return (\r\n        <>\r\n            <div style={{ margin: \"auto\" }}>\r\n                <img src={logo} style={{ width: \"100%\", marginTop: 60, marginBottom: 40 }} />\r\n            </div>\r\n            <Cell title=\"用户名\">\r\n                <Input\r\n                    clearable\r\n                    type=\"text\"\r\n                    placeholder=\"请输入用户名\"\r\n                    value={name}\r\n                    onChange={(value) => {\r\n                        setName(value);\r\n                        console.log(`onChange: ${value}`);\r\n                    }}\r\n                    onBlur={(value) => console.log(`onBlur: ${value}`)}\r\n                />\r\n            </Cell>\r\n            <Cell title=\"密码\">\r\n                <Input\r\n                    clearable\r\n                    type=\"password\"\r\n                    placeholder=\"请输入密码\"\r\n                    placeholder=\"请输入\"\r\n                    value={password}\r\n                    onChange={setPassword}\r\n                />\r\n            </Cell>\r\n            <Button block theme=\"primary\" onClick={handleClickLogin}>登录</Button>\r\n\r\n            <Popup\r\n                visible={popupSettings.visible}\r\n                direction=\"top\"\r\n                mask={false}\r\n                afterClose={() => console.log('关闭')}\r\n            >\r\n                <div className=\"popup-box-top\">\r\n                    {popupSettings.content}\r\n                </div>\r\n            </Popup>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Login;",["79","80"],"D:\\Work\\Code\\web\\xg-front-mobile2\\src\\pages\\Router.jsx",[],"D:\\Work\\Code\\web\\xg-front-mobile2\\src\\reportWebVitals.js",[],["81","82"],"D:\\Work\\Code\\web\\xg-front-mobile2\\src\\pages\\Home.jsx",["83","84","85","86","87","88","89","90","91"],"import { useState, useEffect } from 'react';\r\nimport { Input, Cell, Button, Radio, Picker, Toast, Panel, Popup } from 'zarm';\r\nimport options from '../components/address';\r\nimport SubjectList from '../components/SubjectList';\r\nimport { createStudentAPI, listOrderSourcesAPI } from '../api/api'\r\n\r\n\r\nconst Home = () => {\r\n    const [name, setName] = useState('');\r\n    const [note, setNote] = useState('');\r\n    const [gender, setGender] = useState(true);\r\n    const [telephone, setTelephone] = useState('');\r\n    const [addrRegion, setAddrRegion] = useState('');\r\n    const [addressExt, setAddressExt] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [subjects, setSubjects] = useState([]);\r\n    const [orderSource, setOrderSource] = useState('');\r\n    const [orderSourceID, setOrderSourceID] = useState(0);\r\n    const [addrPanelVisible, setAddrPanelVisible] = useState(false);\r\n    const [orderSourcePanelVisible, setOrderSourcePanelVisible] = useState(false);\r\n    const [popupSettings, setPopupSettings] = useState({ visible: false, content: \"\" });\r\n    const [clearSubjects, setClearSubjects] = useState(false);\r\n    const [orderSourceList, setOrderSourceList] = useState([]);\r\n\r\n    let resetFormData = () => {\r\n        setGender(true);\r\n        setName(\"\");\r\n        setTelephone(\"\");\r\n        setEmail(\"\");\r\n        setAddressExt(\"\");\r\n        setAddrRegion(\"\");\r\n        setOrderSource(\"\");\r\n        setOrderSourceID(0);\r\n        setNote(\"\");\r\n        let flag = !clearSubjects;\r\n        setClearSubjects(flag);\r\n\r\n        // setSubjects([]);\r\n    }\r\n    useEffect(async () => {\r\n        let res = await listOrderSourcesAPI();\r\n        if (res.err_msg != \"success\") {\r\n            message(\"获取订单来源失败\");\r\n            return;\r\n        }\r\n        if (res.sources == null) {\r\n            message(\"订单来源为空，请联系系统管理员\");\r\n            return;\r\n        }\r\n        let orderSources = [];\r\n        for (let i = 0; i < res.sources.length; i++) {\r\n            orderSources.push({\r\n                id: res.sources[i].id,\r\n                name: res.sources[i].name,\r\n                value: res.sources[i].id,\r\n                label: res.sources[i].name,\r\n            });\r\n        }\r\n        setOrderSourceList(orderSources);\r\n    }, []);\r\n    let checkFormData = () => {\r\n        if (name == \"\") {\r\n            message(\"学生姓名不能为空\");\r\n            return false;\r\n        }\r\n        if (telephone == \"\") {\r\n            message(\"学生电话不能为空\");\r\n            return false;\r\n        }\r\n        if (addrRegion == \"\") {\r\n            message(\"居住城市不能为空\");\r\n            return false;\r\n        }\r\n        if (orderSource == \"\") {\r\n            message(\"订单来源不能为空\");\r\n            return false;\r\n        }\r\n        if (subjects.length < 1) {\r\n            message(\"报名意向不能为空\");\r\n            return false;\r\n        }\r\n        return true\r\n    }\r\n    let handleCreateStudent = async e => {\r\n        let noErr = checkFormData();\r\n        if (!noErr) {\r\n            return;\r\n        }\r\n        let address = addrRegion;\r\n        let intentSubjectData = [];\r\n        for (let i = 0; i < subjects.length; i++) {\r\n            intentSubjectData.push(subjects[i].value);\r\n        }\r\n        let res = await createStudentAPI({\r\n            \"name\": name,\r\n            \"gender\": gender,\r\n            \"telephone\": telephone,\r\n            \"email\": email,\r\n            \"address\": address,\r\n            \"address_ext\": addressExt,\r\n            \"intent_subject\": intentSubjectData,\r\n            \"note\": note,\r\n            \"order_source_id\": orderSourceID\r\n        });\r\n        if (res.err_msg == \"success\") {\r\n            switch (res.result.status) {\r\n                case 1:\r\n                    //status 1 创建成功\r\n                    message('创建成功');\r\n                    break;\r\n                case 2:\r\n                    //status 2 挑战失败\r\n                    message('创建成功，挑战失败');\r\n                    break;\r\n                case 3:\r\n                    //status 3 挑战成功\r\n                    message('创建成功，挑战成功');\r\n                    break;\r\n                default:\r\n                    message('创建失败，未知状态');\r\n            }\r\n\r\n        } else {\r\n            console.log(res);\r\n            //创建失败\r\n            message('创建失败:' + res.err_msg);\r\n        }\r\n        resetFormData();\r\n    }\r\n\r\n    const openAddrPanel = e => {\r\n        setAddrPanelVisible(true);\r\n    }\r\n    const openOrderSourcePanel = e => {\r\n        setOrderSourcePanelVisible(true);\r\n    }\r\n    const message = (content) => {\r\n        setPopupSettings({ visible: true, content: content });\r\n        setTimeout(() => {\r\n            setPopupSettings({ visible: false, content: \"\" });\r\n        }, 3000);\r\n    }\r\n    const selectAddressRegion = selected => {\r\n        if (selected == null) {\r\n            return;\r\n        }\r\n        let addr = \"\";\r\n        for (let i = 0; i < selected.length; i++) {\r\n            if (addr != \"\") {\r\n                addr = addr + \"-\";\r\n            }\r\n            addr = addr + selected[i].value;\r\n        }\r\n        setAddrRegion(addr);\r\n    }\r\n\r\n    const selectOrderSource = selected => {\r\n        if (selected == null) {\r\n            return;\r\n        }\r\n        let orderSource = \"\";\r\n        let orderSourceID = 0;\r\n        for (let i = 0; i < selected.length; i++) {\r\n            if (orderSource != \"\") {\r\n                orderSource = orderSource + \"-\";\r\n            }\r\n            orderSource = orderSource + selected[i].label;\r\n\r\n            orderSourceID = selected[i].value;\r\n        }\r\n        setOrderSource(orderSource);\r\n        setOrderSourceID(orderSourceID);\r\n\r\n    }\r\n    return (\r\n        <>\r\n            <Panel\r\n                title=\"基本信息\"\r\n            >\r\n                <Cell title=\"姓名\">\r\n                    <Input\r\n                        clearable\r\n                        type=\"text\"\r\n                        placeholder=\"请输入学员姓名\"\r\n                        value={name}\r\n                        onChange={(value) => {\r\n                            setName(value);\r\n                            console.log(`onChange: ${value}`);\r\n                        }}\r\n                        onBlur={(value) => console.log(`onBlur: ${value}`)}\r\n                    />\r\n\r\n                </Cell>\r\n                <Cell title=\"性别\">\r\n                    <Radio.Group\r\n                        block\r\n                        type=\"button\"\r\n                        defaultValue={true}\r\n                        value={gender}\r\n                        onChange={setGender}>\r\n                        <Radio value={true}>男</Radio>\r\n                        <Radio value={false}>女</Radio>\r\n                    </Radio.Group>\r\n                </Cell>\r\n                <Cell title=\"手机号\">\r\n                    <Input\r\n                        clearable\r\n                        type=\"text\"\r\n                        placeholder=\"请输入学员手机号\"\r\n                        value={telephone}\r\n                        onChange={(value) => {\r\n                            setTelephone(value);\r\n                            console.log(`onChange: ${value}`);\r\n                        }}\r\n                        onBlur={(value) => console.log(`onBlur: ${value}`)}\r\n                    />\r\n                </Cell>\r\n\r\n                <Cell title=\"居住地址\">\r\n                    <Button size=\"sm\" onClick={openAddrPanel}>选择</Button>\r\n                    <span>&nbsp;&nbsp;{addrRegion}</span>\r\n                </Cell>\r\n                <Cell title=\"详细地址\">\r\n                    <Input\r\n                        clearable\r\n                        type=\"text\"\r\n                        placeholder=\"请输入详细地址\"\r\n                        value={addressExt}\r\n                        onChange={(value) => {\r\n                            setAddressExt(value);\r\n                            console.log(`onChange: ${value}`);\r\n                        }}\r\n                        onBlur={(value) => console.log(`onBlur: ${value}`)}\r\n                    />\r\n                </Cell>\r\n\r\n                <Cell title=\"电子邮箱\">\r\n                    <Input\r\n                        clearable\r\n                        type=\"text\"\r\n                        placeholder=\"请输入学员邮箱\"\r\n                        value={email}\r\n                        onChange={(value) => {\r\n                            setEmail(value);\r\n                        }}\r\n                        onBlur={(value) => console.log(`onBlur: ${value}`)}\r\n                    />\r\n                </Cell>\r\n\r\n                <Cell title=\"订单来源\">\r\n                    <Button size=\"sm\" onClick={openOrderSourcePanel}>选择</Button>\r\n                    <span>&nbsp;&nbsp;{orderSource}</span>\r\n                </Cell>\r\n\r\n                <Cell title=\"备注\">\r\n                    <Input\r\n                        type=\"text\"\r\n                        rows={2}\r\n                        placeholder=\"请输入学员备注\"\r\n                        value={note}\r\n                        onChange={setNote}\r\n                    />\r\n                </Cell>\r\n            </Panel>\r\n\r\n            <SubjectList handleUpdateSubjects={setSubjects} clear={clearSubjects} />\r\n\r\n            <Picker\r\n                visible={addrPanelVisible}\r\n                dataSource={options}\r\n                onOk={(selected) => {\r\n                    console.log('Picker onOk: ', selected);\r\n                    Toast.show(JSON.stringify(selected));\r\n                    selectAddressRegion(selected)\r\n                    // setValue('cascade', selected.map(item => item.code));\r\n                    setAddrPanelVisible(false);\r\n                }}\r\n                onCancel={() => setAddrPanelVisible(false)}\r\n            />\r\n\r\n            <Picker\r\n                visible={orderSourcePanelVisible}\r\n                dataSource={orderSourceList}\r\n                onOk={(selected) => {\r\n                    Toast.show(JSON.stringify(selected));\r\n                    selectOrderSource(selected);\r\n                    // setValue('single', selected.map(item => item.value));\r\n                    setOrderSourcePanelVisible(false);\r\n                }}\r\n                onCancel={() => setOrderSourcePanelVisible(false)}\r\n            />\r\n\r\n            <Popup\r\n                visible={popupSettings.visible}\r\n                direction=\"top\"\r\n                mask={false}\r\n                afterClose={() => console.log('关闭')}\r\n            >\r\n                <div className=\"popup-box-top\">\r\n                    {popupSettings.content}\r\n                </div>\r\n            </Popup>\r\n\r\n            <Button block theme=\"primary\" style={{ marginBottom: 80 }} onClick={handleCreateStudent}>录单</Button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home;","D:\\Work\\Code\\web\\xg-front-mobile2\\src\\pages\\Details.jsx",["92","93"],"D:\\Work\\Code\\web\\xg-front-mobile2\\src\\api\\api.js",["94","95","96","97","98","99","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120","121"],"import axios from \"axios\"; //导入axios\r\n\r\nconst baseURL = \"http://localhost:8088/api\"\r\n// const baseURL = \"http://101.133.139.38:8088/api\"\r\n\r\naxios.defaults.headers.common[\"Authorization\"] = sessionStorage.getItem(\"token\");\r\n\r\nexport function loginAPI(name, password) {\r\n    return axios.post(baseURL + \"/user/login\", {\r\n        name: name,\r\n        password: password\r\n    }).then(res => {\r\n        console.log(res.data);\r\n        return res.data;\r\n    }).catch(error => {\r\n        console.error(error)\r\n        return null;\r\n    })\r\n}\r\n\r\nexport async function updatePasswordAPI(password) {\r\n    try {\r\n        let res = await axios.put(baseURL + \"/user/password\", {\r\n            new_password: password\r\n        })\r\n        return res.data;\r\n    } catch (e) {\r\n        return { err_msg: e }\r\n    }\r\n}\r\n\r\nexport async function listSubjectsAPI() {\r\n    try {\r\n        let res = await axios.get(baseURL + \"/subjects/details/0\")\r\n        return res.data.subjects;\r\n    } catch (e) {\r\n        return { err_msg: e }\r\n    }\r\n}\r\n\r\nexport async function listSubjectsTreeAPI() {\r\n    try {\r\n        let res = await axios.get(baseURL + \"/subjects/tree\")\r\n        return res.data.subjects;\r\n    } catch (e) {\r\n        return { err_msg: e }\r\n    }\r\n}\r\n\r\nexport async function listSubjectsTreeAPIWithData() {\r\n    try {\r\n        let res = await axios.get(baseURL + \"/subjects/tree\")\r\n        return res.data;\r\n    } catch (e) {\r\n        return { err_msg: e }\r\n    }\r\n}\r\n\r\n\r\nexport async function listSubjectsAllAPI() {\r\n    try {\r\n        let res = await axios.get(baseURL + \"/subjects/all\")\r\n        return res.data.subjects;\r\n    } catch (e) {\r\n        return { err_msg: e }\r\n    }\r\n}\r\n\r\nexport async function listSubjectsAllAPIIWithData() {\r\n    try {\r\n        let res = await axios.get(baseURL + \"/subjects/all\")\r\n        return res.data;\r\n    } catch (e) {\r\n        return { err_msg: e }\r\n    }\r\n}\r\n\r\nexport async function listAuths() {\r\n    try {\r\n        let res = await axios.get(baseURL + \"/auths/\")\r\n        return res.data;\r\n    } catch (e) {\r\n        return { err_msg: e }\r\n    }\r\n}\r\n\r\nexport async function createRole(data) {\r\n    try {\r\n        let res = await axios.post(baseURL + \"/role/\", data)\r\n        return res.data;\r\n    } catch (e) {\r\n        return { err_msg: e }\r\n    }\r\n}\r\n\r\nexport async function createStudentAPI(values) {\r\n    try {\r\n        let res = await axios.post(baseURL + \"/student/\", values);\r\n        return res.data;\r\n    } catch (e) {\r\n        return { err_msg: e }\r\n    }\r\n}\r\n\r\nexport async function listStudentAPI(page, pageSize, data) {\r\n    try {\r\n        let res = await axios.get(baseURL + `/students/private?page=${page}&page_size=${pageSize}&status=${data.status}&no_dispatch_order=${data.noDispatch}&order_by=created_at desc`);\r\n        return res.data;\r\n    } catch (e) {\r\n        return { err_msg: e }\r\n    }\r\n}\r\n\r\nexport async function listAllStudentAPI(page, pageSize, data) {\r\n    try {\r\n        let res = await axios.get(baseURL + `/students/?page=${page}&page_size=${pageSize}&status=${data.status}&no_dispatch_order=${data.noDispatch}&order_by=created_at desc`);\r\n        return res.data;\r\n    } catch (e) {\r\n        return { err_msg: e }\r\n    }\r\n}\r\nexport async function getStudentByIdAPI(id) {\r\n    try {\r\n        let res = await axios.get(baseURL + \"/student/\" + id);\r\n        return res.data;\r\n    } catch (e) {\r\n        return { err_msg: e }\r\n    }\r\n}\r\n\r\nexport async function listOrgsAPI(page, pageSize) {\r\n    try {\r\n        if (page == undefined || pageSize == undefined) {\r\n            page = 0;\r\n            pageSize = 0;\r\n        }\r\n        let res = await axios.get(baseURL + `/orgs/?page=${page}&page_size=${pageSize}`);\r\n        return res.data;\r\n    } catch (e) {\r\n        return { err_msg: e }\r\n    }\r\n}\r\n\r\nexport async function listSubOrgsAPI(condition, page, pageSize) {\r\n    try {\r\n        let address = condition.address;\r\n        let rawSubjects = condition.subjects;\r\n        let studentId = condition.student_id;\r\n        let subjects = \"\";\r\n        if (rawSubjects != null && rawSubjects != undefined) {\r\n            subjects = rawSubjects.join(\",\");\r\n        }\r\n        let parentId = condition.parent_id;\r\n        let res = await axios.get(baseURL + `/orgs/campus?address=${address}&subjects=${subjects}&student_id=${studentId}&page=${page}&page_size=${pageSize}&parent_id=${parentId}`);\r\n        return res.data;\r\n    } catch (e) {\r\n        return { err_msg: e }\r\n    }\r\n}\r\n\r\nexport async function listOrderSourcesAPI() {\r\n    try {\r\n        let res = await axios.get(baseURL + \"/order_sources/\")\r\n        return res.data;\r\n    } catch (e) {\r\n        return { err_msg: e }\r\n    }\r\n}\r\n\r\nexport async function createOrderSourcesAPI(data) {\r\n    try {\r\n        let res = await axios.post(baseURL + \"/order_source/\", data)\r\n        return res.data;\r\n    } catch (e) {\r\n        return { err_msg: e }\r\n    }\r\n}\r\n\r\nexport async function createOrderAPI(data) {\r\n    try {\r\n        let res = await axios.post(baseURL + \"/order/\", data);\r\n        return res.data;\r\n    } catch (e) {\r\n        return { err_msg: e }\r\n    }\r\n}\r\n\r\nexport async function getStatisticsSummaryAPI() {\r\n    try {\r\n        // org_id, author, publisher_id, order_source\r\n        let api = `/statistics/summary`;\r\n        let res = await axios.get(baseURL + api);\r\n        return res.data;\r\n    } catch (e) {\r\n        return { err_msg: e }\r\n    }\r\n}\r\nexport async function getStatisticsTableAPI(data) {\r\n    try {\r\n        let res = await axios.get(baseURL + `/statistics/table?org_id=${data.org_id}&author=${data.author}&publisher_id=${data.publisher_id}&order_source=${data.order_source}`);\r\n        return res.data;\r\n    } catch (e) {\r\n        return { err_msg: e }\r\n    }\r\n}\r\n\r\nexport async function getStatisticsGraphAPI() {\r\n    try {\r\n        let res = await axios.get(baseURL + \"/statistics/graph\");\r\n        return res.data;\r\n    } catch (e) {\r\n        return { err_msg: e }\r\n    }\r\n}\r\n\r\nexport async function listPendingOrgsAPI() {\r\n    try {\r\n        let res = await axios.get(baseURL + \"/orgs/pending\");\r\n        return res.data;\r\n    } catch (e) {\r\n        return { err_msg: e }\r\n    }\r\n}\r\nexport async function getOrgAPI(id) {\r\n    try {\r\n        let res = await axios.get(baseURL + \"/org/\" + id);\r\n        return res.data;\r\n    } catch (e) {\r\n        return { err_msg: e }\r\n    }\r\n}\r\n\r\n\r\n\r\nexport async function createSubjectAPI(data) {\r\n    try {\r\n        let res = await axios.post(baseURL + \"/subject/\", data);\r\n        return res.data;\r\n    } catch (e) {\r\n        return { err_msg: e }\r\n    }\r\n}\r\n\r\nexport async function batchCreateSubjectAPI(data) {\r\n    try {\r\n        let res = await axios.post(baseURL + \"/subjects/\", data);\r\n        return res.data;\r\n    } catch (e) {\r\n        return { err_msg: e }\r\n    }\r\n}\r\n\r\nexport async function addOrderMarkAPI(id, content) {\r\n    try {\r\n        let res = await axios.post(baseURL + `/order/${id}/mark`, {\r\n            content: content\r\n        });\r\n        return res.data;\r\n    } catch (e) {\r\n        return { err_msg: e }\r\n    }\r\n}\r\n\r\nexport async function createOrgAPI(data) {\r\n    try {\r\n        let res = await axios.post(baseURL + \"/org/\", data);\r\n        return res.data;\r\n    } catch (e) {\r\n        return { err_msg: e }\r\n    }\r\n}\r\n\r\nexport async function updateOrgAPI(id, data) {\r\n    try {\r\n        console.log(\"Update:\", data);\r\n        let res = await axios.put(baseURL + `/org/${id}`, data);\r\n        return res.data;\r\n    } catch (e) {\r\n        return { err_msg: e }\r\n    }\r\n}\r\n\r\n\r\nexport async function updateOrgSelfAPI(data) {\r\n    try {\r\n        console.log(\"Update:\", data);\r\n        let res = await axios.put(baseURL + `/org/`, data);\r\n        return res.data;\r\n    } catch (e) {\r\n        return { err_msg: e }\r\n    }\r\n}\r\n\r\nexport async function rejectOrgReview(id) {\r\n    try {\r\n        let res = await axios.put(baseURL + \"/org/\" + id + \"/review/reject\");\r\n        return res.data;\r\n    } catch (e) {\r\n        return { err_msg: e }\r\n    }\r\n}\r\n\r\nexport async function approveOrgReview(id) {\r\n    try {\r\n        let res = await axios.put(baseURL + \"/org/\" + id + \"/review/approve\");\r\n        return res.data;\r\n    } catch (e) {\r\n        return { err_msg: e }\r\n    }\r\n}\r\n\r\nexport async function revokeOrgReview(id) {\r\n    try {\r\n        let res = await axios.put(baseURL + \"/org/\" + id + \"/revoke\");\r\n        return res.data;\r\n    } catch (e) {\r\n        return { err_msg: e }\r\n    }\r\n}\r\n\r\nexport async function listOrdersAPI(page, pageSize, data) {\r\n    console.log(data);\r\n    try {\r\n        let api = `/orders/?page=${page}&page_size=${pageSize}`;\r\n        if (data != null) {\r\n            if (data.status != undefined && data.status != 0) {\r\n                api = api + `&status=${data.status}`;\r\n            }\r\n            if (data.orgId != undefined && data.orgId != 0) {\r\n                api = api + `&to_org_ids=${data.orgId}`;\r\n            }\r\n            if (data.orderSource != undefined && data.orderSource != 0) {\r\n                api = api + `&order_sources=${data.orderSource}`;\r\n            }\r\n            if (data.subject != undefined && data.subject != \"\") {\r\n                api = api + `&intent_subjects=${data.subject}`;\r\n            }\r\n            if (data.createdStartAt != undefined && data.createdEndAt != undefined &&\r\n                data.createdStartAt != \"\" && data.createdEndAt != \"\") {\r\n                api = api + `&create_start_at=${data.createdStartAt}&create_end_at=${data.createdEndAt}`;\r\n            }\r\n        }\r\n        api = api + `&order_by=updated_at desc`;\r\n\r\n        let res = await axios.get(baseURL + api);\r\n\r\n        return res.data;\r\n    } catch (e) {\r\n        return { err_msg: e }\r\n    }\r\n}\r\n\r\nexport async function listAuthOrdersAPI(page, pageSize, data) {\r\n    try {\r\n        let api = `/orders/author?page=${page}&page_size=${pageSize}`;\r\n        if (data != null) {\r\n            if (data.status != undefined && data.status != 0) {\r\n                api = api + `&status=${data.status}`;\r\n            }\r\n            if (data.orgId != undefined && data.orgId != 0) {\r\n                api = api + `&to_org_ids=${data.orgId}`;\r\n            }\r\n            if (data.orderSource != undefined && data.orderSource != 0) {\r\n                api = api + `&order_sources=${data.orderSource}`;\r\n            }\r\n            if (data.subject != undefined && data.subject != \"\") {\r\n                api = api + `&intent_subjects=${data.subject}`;\r\n            }\r\n            if (data.createdStartAt != undefined && data.createdEndAt != undefined &&\r\n                data.createdStartAt != \"\" && data.createdEndAt != \"\") {\r\n                api = api + `&create_start_at=${data.createdStartAt}&create_end_at=${data.createdEndAt}`;\r\n            }\r\n        }\r\n        api = api + `&order_by=updated_at desc`;\r\n\r\n        let res = await axios.get(baseURL + api)\r\n        // let res = await axios.get(baseURL + \"/orders/author?page=\" + page + \"&page_size=\" + pageSize)\r\n        return res.data;\r\n    } catch (e) {\r\n        return { err_msg: e }\r\n    }\r\n}\r\n\r\nexport async function listOrgOrdersAPI(page, pageSize) {\r\n    try {\r\n        let api = \"/orders/org?page=\" + page + \"&page_size=\" + pageSize;\r\n        api = api + `&order_by=updated_at desc`;\r\n        let res = await axios.get(baseURL + api);\r\n        return res.data;\r\n    } catch (e) {\r\n        return { err_msg: e }\r\n    }\r\n}\r\n\r\n\r\nexport async function listPendingOrdersAPI() {\r\n    try {\r\n        let res = await axios.get(baseURL + \"/orders/pending\")\r\n        return res.data;\r\n    } catch (e) {\r\n        return { err_msg: e }\r\n    }\r\n}\r\n\r\nexport async function getOrgSubjectsAPI(id) {\r\n    try {\r\n        let res = await axios.get(baseURL + \"/org/\" + id + \"/subjects\");\r\n        return res.data;\r\n    } catch (e) {\r\n        return { err_msg: e }\r\n    }\r\n}\r\nexport async function getOrderAPI(id) {\r\n    if (id < 1) {\r\n        return { err_msg: \"invalid id\" };\r\n    }\r\n    try {\r\n        let res = await axios.get(baseURL + \"/order/\" + id);\r\n        return res.data;\r\n    } catch (e) {\r\n        return { err_msg: e }\r\n    }\r\n}\r\n\r\nexport async function getPendingPaymentAPI() {\r\n    try {\r\n        let res = await axios.get(baseURL + \"/payments/pending\");\r\n        return res.data;\r\n    } catch (e) {\r\n        return { err_msg: e }\r\n    }\r\n}\r\n\r\nexport async function acceptPaymentAPI(id) {\r\n    try {\r\n        let res = await axios.put(baseURL + \"/payment/\" + id + \"/review/accept\");\r\n        return res.data;\r\n    } catch (e) {\r\n        return { err_msg: e }\r\n    }\r\n}\r\n\r\nexport async function rejectPaymentAPI(id) {\r\n    try {\r\n        let res = await axios.put(baseURL + \"/payment/\" + id + \"/review/reject\");\r\n        return res.data;\r\n    } catch (e) {\r\n        return { err_msg: e }\r\n    }\r\n}\r\n\r\n\r\nexport async function listRolesAPI() {\r\n    try {\r\n        let res = await axios.get(baseURL + \"/roles/\");\r\n        return res.data;\r\n    } catch (e) {\r\n        return { err_msg: e }\r\n    }\r\n}\r\n\r\nexport async function createUserAPI(values) {\r\n    try {\r\n        let res = await axios.post(baseURL + \"/user/\", values);\r\n        return res.data;\r\n    } catch (e) {\r\n        return { err_msg: e }\r\n    }\r\n}\r\n\r\nexport async function listUsersAPI(page, pageSize) {\r\n    try {\r\n        let res = await axios.get(baseURL + `/users/?page=${page}&page_size=${pageSize}`);\r\n        return res.data;\r\n    } catch (e) {\r\n        return { err_msg: e }\r\n    }\r\n}\r\n\r\n\r\nexport async function listUsersWithOrgIdAPI(orgId, page, pageSize) {\r\n    try {\r\n        let res = await axios.get(baseURL + `/users/?page=${page}&page_size=${pageSize}&org_id=${orgId}`);\r\n        return res.data;\r\n    } catch (e) {\r\n        return { err_msg: e }\r\n    }\r\n}\r\n\r\nexport async function resetUserPasswordAPI(id) {\r\n    try {\r\n        let res = await axios.put(baseURL + \"/user/reset/\" + id);\r\n        return res.data;\r\n    } catch (e) {\r\n        return { err_msg: e }\r\n    }\r\n}\r\n\r\nexport async function signupOrderAPI(id, data) {\r\n    try {\r\n        let res = await axios.put(baseURL + \"/order/\" + id + \"/signup\", data);\r\n        return res.data;\r\n    } catch (e) {\r\n        return { err_msg: e }\r\n    }\r\n}\r\nexport async function depositOrderAPI(id, data) {\r\n    try {\r\n        let res = await axios.put(baseURL + \"/order/\" + id + \"/deposit\", data);\r\n        return res.data;\r\n    } catch (e) {\r\n        return { err_msg: e }\r\n    }\r\n}\r\n\r\nexport async function payOrderAPI(id, data) {\r\n    try {\r\n        if (data.mode == 1) {\r\n            let res = await axios.post(baseURL + \"/payment/\" + id + \"/pay\", data);\r\n            return res.data;\r\n        } else {\r\n            let res = await axios.post(baseURL + \"/payment/\" + id + \"/payback\", data);\r\n            return res.data;\r\n        }\r\n\r\n    } catch (e) {\r\n        return { err_msg: e }\r\n    }\r\n}\r\n\r\nexport async function invalidOrderAPI(id) {\r\n    try {\r\n        let res = await axios.put(baseURL + `/order/${id}/invalid`);\r\n        return res.data;\r\n    } catch (e) {\r\n        return { err_msg: e }\r\n    }\r\n}\r\n\r\nexport async function revokeOrderAPI(id) {\r\n    try {\r\n        let res = await axios.put(baseURL + `/order/${id}/revoke`);\r\n        return res.data;\r\n    } catch (e) {\r\n        return { err_msg: e }\r\n    }\r\n}\r\n","D:\\Work\\Code\\web\\xg-front-mobile2\\src\\components\\SubjectList.jsx",["122","123","124","125","126","127","128","129","130","131","132","133"],{"ruleId":"134","severity":1,"message":"135","line":3,"column":17,"nodeType":"136","messageId":"137","endLine":3,"endColumn":25},{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","replacedBy":"141"},{"ruleId":"134","severity":1,"message":"142","line":3,"column":10,"nodeType":"136","messageId":"137","endLine":3,"endColumn":19},{"ruleId":"134","severity":1,"message":"143","line":3,"column":21,"nodeType":"136","messageId":"137","endLine":3,"endColumn":31},{"ruleId":"144","severity":1,"message":"145","line":11,"column":45,"nodeType":"146","messageId":"147","endLine":11,"endColumn":47},{"ruleId":"144","severity":1,"message":"148","line":15,"column":33,"nodeType":"146","messageId":"147","endLine":15,"endColumn":35},{"ruleId":"144","severity":1,"message":"148","line":19,"column":50,"nodeType":"146","messageId":"147","endLine":19,"endColumn":52},{"ruleId":"144","severity":1,"message":"148","line":22,"column":50,"nodeType":"146","messageId":"147","endLine":22,"endColumn":52},{"ruleId":"144","severity":1,"message":"148","line":25,"column":50,"nodeType":"146","messageId":"147","endLine":25,"endColumn":52},{"ruleId":"134","severity":1,"message":"149","line":1,"column":20,"nodeType":"136","messageId":"137","endLine":1,"endColumn":29},{"ruleId":"134","severity":1,"message":"150","line":5,"column":22,"nodeType":"136","messageId":"137","endLine":5,"endColumn":33},{"ruleId":"138","replacedBy":"151"},{"ruleId":"140","replacedBy":"152"},{"ruleId":"144","severity":1,"message":"148","line":29,"column":18,"nodeType":"146","messageId":"147","endLine":29,"endColumn":20},{"ruleId":"144","severity":1,"message":"148","line":29,"column":36,"nodeType":"146","messageId":"147","endLine":29,"endColumn":38},{"ruleId":"144","severity":1,"message":"148","line":42,"column":40,"nodeType":"146","messageId":"147","endLine":42,"endColumn":42},{"ruleId":"153","severity":1,"message":"154","line":65,"column":17,"nodeType":"155","endLine":65,"endColumn":94},{"ruleId":"156","severity":1,"message":"157","line":85,"column":21,"nodeType":"158","endLine":85,"endColumn":38},{"ruleId":"138","replacedBy":"159"},{"ruleId":"140","replacedBy":"160"},{"ruleId":"138","replacedBy":"161"},{"ruleId":"140","replacedBy":"162"},{"ruleId":"163","severity":1,"message":"164","line":40,"column":15,"nodeType":"165","endLine":60,"endColumn":6},{"ruleId":"144","severity":1,"message":"145","line":42,"column":25,"nodeType":"146","messageId":"147","endLine":42,"endColumn":27},{"ruleId":"144","severity":1,"message":"148","line":62,"column":18,"nodeType":"146","messageId":"147","endLine":62,"endColumn":20},{"ruleId":"144","severity":1,"message":"148","line":66,"column":23,"nodeType":"146","messageId":"147","endLine":66,"endColumn":25},{"ruleId":"144","severity":1,"message":"148","line":70,"column":24,"nodeType":"146","messageId":"147","endLine":70,"endColumn":26},{"ruleId":"144","severity":1,"message":"148","line":74,"column":25,"nodeType":"146","messageId":"147","endLine":74,"endColumn":27},{"ruleId":"144","severity":1,"message":"148","line":105,"column":25,"nodeType":"146","messageId":"147","endLine":105,"endColumn":27},{"ruleId":"144","severity":1,"message":"145","line":149,"column":22,"nodeType":"146","messageId":"147","endLine":149,"endColumn":24},{"ruleId":"144","severity":1,"message":"145","line":164,"column":29,"nodeType":"146","messageId":"147","endLine":164,"endColumn":31},{"ruleId":"144","severity":1,"message":"145","line":22,"column":29,"nodeType":"146","messageId":"147","endLine":22,"endColumn":31},{"ruleId":"163","severity":1,"message":"166","line":28,"column":8,"nodeType":"167","endLine":28,"endColumn":10,"suggestions":"168"},{"ruleId":"144","severity":1,"message":"148","line":133,"column":18,"nodeType":"146","messageId":"147","endLine":133,"endColumn":20},{"ruleId":"144","severity":1,"message":"148","line":133,"column":43,"nodeType":"146","messageId":"147","endLine":133,"endColumn":45},{"ruleId":"144","severity":1,"message":"145","line":150,"column":48,"nodeType":"146","messageId":"147","endLine":150,"endColumn":50},{"ruleId":"144","severity":1,"message":"145","line":326,"column":29,"nodeType":"146","messageId":"147","endLine":326,"endColumn":31},{"ruleId":"144","severity":1,"message":"145","line":326,"column":57,"nodeType":"146","messageId":"147","endLine":326,"endColumn":59},{"ruleId":"144","severity":1,"message":"145","line":329,"column":28,"nodeType":"146","messageId":"147","endLine":329,"endColumn":30},{"ruleId":"144","severity":1,"message":"145","line":329,"column":55,"nodeType":"146","messageId":"147","endLine":329,"endColumn":57},{"ruleId":"144","severity":1,"message":"145","line":332,"column":34,"nodeType":"146","messageId":"147","endLine":332,"endColumn":36},{"ruleId":"144","severity":1,"message":"145","line":332,"column":67,"nodeType":"146","messageId":"147","endLine":332,"endColumn":69},{"ruleId":"144","severity":1,"message":"145","line":335,"column":30,"nodeType":"146","messageId":"147","endLine":335,"endColumn":32},{"ruleId":"144","severity":1,"message":"145","line":335,"column":59,"nodeType":"146","messageId":"147","endLine":335,"endColumn":61},{"ruleId":"144","severity":1,"message":"145","line":338,"column":37,"nodeType":"146","messageId":"147","endLine":338,"endColumn":39},{"ruleId":"144","severity":1,"message":"145","line":338,"column":71,"nodeType":"146","messageId":"147","endLine":338,"endColumn":73},{"ruleId":"144","severity":1,"message":"145","line":339,"column":37,"nodeType":"146","messageId":"147","endLine":339,"endColumn":39},{"ruleId":"144","severity":1,"message":"145","line":339,"column":64,"nodeType":"146","messageId":"147","endLine":339,"endColumn":66},{"ruleId":"144","severity":1,"message":"145","line":357,"column":29,"nodeType":"146","messageId":"147","endLine":357,"endColumn":31},{"ruleId":"144","severity":1,"message":"145","line":357,"column":57,"nodeType":"146","messageId":"147","endLine":357,"endColumn":59},{"ruleId":"144","severity":1,"message":"145","line":360,"column":28,"nodeType":"146","messageId":"147","endLine":360,"endColumn":30},{"ruleId":"144","severity":1,"message":"145","line":360,"column":55,"nodeType":"146","messageId":"147","endLine":360,"endColumn":57},{"ruleId":"144","severity":1,"message":"145","line":363,"column":34,"nodeType":"146","messageId":"147","endLine":363,"endColumn":36},{"ruleId":"144","severity":1,"message":"145","line":363,"column":67,"nodeType":"146","messageId":"147","endLine":363,"endColumn":69},{"ruleId":"144","severity":1,"message":"145","line":366,"column":30,"nodeType":"146","messageId":"147","endLine":366,"endColumn":32},{"ruleId":"144","severity":1,"message":"145","line":366,"column":59,"nodeType":"146","messageId":"147","endLine":366,"endColumn":61},{"ruleId":"144","severity":1,"message":"145","line":369,"column":37,"nodeType":"146","messageId":"147","endLine":369,"endColumn":39},{"ruleId":"144","severity":1,"message":"145","line":369,"column":71,"nodeType":"146","messageId":"147","endLine":369,"endColumn":73},{"ruleId":"144","severity":1,"message":"145","line":370,"column":37,"nodeType":"146","messageId":"147","endLine":370,"endColumn":39},{"ruleId":"144","severity":1,"message":"145","line":370,"column":64,"nodeType":"146","messageId":"147","endLine":370,"endColumn":66},{"ruleId":"144","severity":1,"message":"148","line":518,"column":23,"nodeType":"146","messageId":"147","endLine":518,"endColumn":25},{"ruleId":"134","severity":1,"message":"169","line":2,"column":42,"nodeType":"136","messageId":"137","endLine":2,"endColumn":47},{"ruleId":"144","severity":1,"message":"148","line":20,"column":49,"nodeType":"146","messageId":"147","endLine":20,"endColumn":51},{"ruleId":"163","severity":1,"message":"164","line":29,"column":15,"nodeType":"165","endLine":42,"endColumn":6},{"ruleId":"144","severity":1,"message":"145","line":31,"column":26,"nodeType":"146","messageId":"147","endLine":31,"endColumn":28},{"ruleId":"144","severity":1,"message":"145","line":38,"column":26,"nodeType":"146","messageId":"147","endLine":38,"endColumn":28},{"ruleId":"163","severity":1,"message":"170","line":42,"column":8,"nodeType":"167","endLine":42,"endColumn":10,"suggestions":"171"},{"ruleId":"163","severity":1,"message":"164","line":44,"column":15,"nodeType":"165","endLine":48,"endColumn":6},{"ruleId":"144","severity":1,"message":"145","line":56,"column":32,"nodeType":"146","messageId":"147","endLine":56,"endColumn":34},{"ruleId":"144","severity":1,"message":"148","line":71,"column":20,"nodeType":"146","messageId":"147","endLine":71,"endColumn":22},{"ruleId":"172","severity":1,"message":"173","line":86,"column":40,"nodeType":"136","messageId":"174","endLine":86,"endColumn":51},{"ruleId":"144","severity":1,"message":"148","line":91,"column":28,"nodeType":"146","messageId":"147","endLine":91,"endColumn":30},{"ruleId":"175","severity":1,"message":"176","line":105,"column":23,"nodeType":"155","endLine":105,"endColumn":78},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","no-native-reassign",["177"],"no-negated-in-lhs",["178"],"'useParams' is defined but never used.","'useHistory' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","'useEffect' is defined but never used.","'setUserInfo' is assigned a value but never used.",["177"],["178"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["177"],["178"],["177"],["178"],"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'history' and 'id'. Either include them or remove the dependency array.","ArrayExpression",["179"],"'Toast' is defined but never used.","React Hook useEffect has a missing dependency: 'parseSubjects'. Either include it or remove the dependency array.",["180"],"no-use-before-define","'newSubjects' was used before it was defined.","usedBeforeDefined","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation",{"desc":"181","fix":"182"},{"desc":"183","fix":"184"},"Update the dependencies array to be: [history, id]",{"range":"185","text":"186"},"Update the dependencies array to be: [parseSubjects]",{"range":"187","text":"188"},[865,867],"[history, id]",[1515,1517],"[parseSubjects]"]